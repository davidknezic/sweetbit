// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package sweetrpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnectWpaNetworkResponse_WpaConnectionUpdateState int32

const (
	ConnectWpaNetworkResponse_CONNECTING ConnectWpaNetworkResponse_WpaConnectionUpdateState = 0
	ConnectWpaNetworkResponse_CONNECTED  ConnectWpaNetworkResponse_WpaConnectionUpdateState = 1
	ConnectWpaNetworkResponse_FAILED     ConnectWpaNetworkResponse_WpaConnectionUpdateState = 2
)

var ConnectWpaNetworkResponse_WpaConnectionUpdateState_name = map[int32]string{
	0: "CONNECTING",
	1: "CONNECTED",
	2: "FAILED",
}

var ConnectWpaNetworkResponse_WpaConnectionUpdateState_value = map[string]int32{
	"CONNECTING": 0,
	"CONNECTED":  1,
	"FAILED":     2,
}

func (x ConnectWpaNetworkResponse_WpaConnectionUpdateState) String() string {
	return proto.EnumName(ConnectWpaNetworkResponse_WpaConnectionUpdateState_name, int32(x))
}

func (ConnectWpaNetworkResponse_WpaConnectionUpdateState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6, 0}
}

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type GetInfoResponse struct {
	Serial               string      `protobuf:"bytes,1,opt,name=serial,proto3" json:"serial,omitempty"`
	Version              string      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Commit               string      `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	RemoteNode           *RemoteNode `protobuf:"bytes,4,opt,name=remoteNode,proto3" json:"remoteNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *GetInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetInfoResponse) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *GetInfoResponse) GetRemoteNode() *RemoteNode {
	if m != nil {
		return m.RemoteNode
	}
	return nil
}

type RemoteNode struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteNode) Reset()         { *m = RemoteNode{} }
func (m *RemoteNode) String() string { return proto.CompactTextString(m) }
func (*RemoteNode) ProtoMessage()    {}
func (*RemoteNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *RemoteNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteNode.Unmarshal(m, b)
}
func (m *RemoteNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteNode.Marshal(b, m, deterministic)
}
func (m *RemoteNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteNode.Merge(m, src)
}
func (m *RemoteNode) XXX_Size() int {
	return xxx_messageInfo_RemoteNode.Size(m)
}
func (m *RemoteNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteNode.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteNode proto.InternalMessageInfo

func (m *RemoteNode) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type GetWpaConnectionInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWpaConnectionInfoRequest) Reset()         { *m = GetWpaConnectionInfoRequest{} }
func (m *GetWpaConnectionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetWpaConnectionInfoRequest) ProtoMessage()    {}
func (*GetWpaConnectionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *GetWpaConnectionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWpaConnectionInfoRequest.Unmarshal(m, b)
}
func (m *GetWpaConnectionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWpaConnectionInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetWpaConnectionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWpaConnectionInfoRequest.Merge(m, src)
}
func (m *GetWpaConnectionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetWpaConnectionInfoRequest.Size(m)
}
func (m *GetWpaConnectionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWpaConnectionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWpaConnectionInfoRequest proto.InternalMessageInfo

type GetWpaConnectionInfoResponse struct {
	Ssid                 string   `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWpaConnectionInfoResponse) Reset()         { *m = GetWpaConnectionInfoResponse{} }
func (m *GetWpaConnectionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetWpaConnectionInfoResponse) ProtoMessage()    {}
func (*GetWpaConnectionInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *GetWpaConnectionInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWpaConnectionInfoResponse.Unmarshal(m, b)
}
func (m *GetWpaConnectionInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWpaConnectionInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetWpaConnectionInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWpaConnectionInfoResponse.Merge(m, src)
}
func (m *GetWpaConnectionInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetWpaConnectionInfoResponse.Size(m)
}
func (m *GetWpaConnectionInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWpaConnectionInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWpaConnectionInfoResponse proto.InternalMessageInfo

func (m *GetWpaConnectionInfoResponse) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *GetWpaConnectionInfoResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetWpaConnectionInfoResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GetWpaConnectionInfoResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ConnectWpaNetworkRequest struct {
	Ssid                 string   `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Psk                  string   `protobuf:"bytes,2,opt,name=psk,proto3" json:"psk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectWpaNetworkRequest) Reset()         { *m = ConnectWpaNetworkRequest{} }
func (m *ConnectWpaNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectWpaNetworkRequest) ProtoMessage()    {}
func (*ConnectWpaNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *ConnectWpaNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectWpaNetworkRequest.Unmarshal(m, b)
}
func (m *ConnectWpaNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectWpaNetworkRequest.Marshal(b, m, deterministic)
}
func (m *ConnectWpaNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectWpaNetworkRequest.Merge(m, src)
}
func (m *ConnectWpaNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectWpaNetworkRequest.Size(m)
}
func (m *ConnectWpaNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectWpaNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectWpaNetworkRequest proto.InternalMessageInfo

func (m *ConnectWpaNetworkRequest) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

func (m *ConnectWpaNetworkRequest) GetPsk() string {
	if m != nil {
		return m.Psk
	}
	return ""
}

type ConnectWpaNetworkResponse struct {
	Status               ConnectWpaNetworkResponse_WpaConnectionUpdateState `protobuf:"varint,1,opt,name=status,proto3,enum=sweetrpc.ConnectWpaNetworkResponse_WpaConnectionUpdateState" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *ConnectWpaNetworkResponse) Reset()         { *m = ConnectWpaNetworkResponse{} }
func (m *ConnectWpaNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectWpaNetworkResponse) ProtoMessage()    {}
func (*ConnectWpaNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *ConnectWpaNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectWpaNetworkResponse.Unmarshal(m, b)
}
func (m *ConnectWpaNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectWpaNetworkResponse.Marshal(b, m, deterministic)
}
func (m *ConnectWpaNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectWpaNetworkResponse.Merge(m, src)
}
func (m *ConnectWpaNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectWpaNetworkResponse.Size(m)
}
func (m *ConnectWpaNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectWpaNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectWpaNetworkResponse proto.InternalMessageInfo

func (m *ConnectWpaNetworkResponse) GetStatus() ConnectWpaNetworkResponse_WpaConnectionUpdateState {
	if m != nil {
		return m.Status
	}
	return ConnectWpaNetworkResponse_CONNECTING
}

type WpaNetwork struct {
	Bssid                string   `protobuf:"bytes,1,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Frequency            string   `protobuf:"bytes,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	SignalLevel          string   `protobuf:"bytes,3,opt,name=signal_level,json=signalLevel,proto3" json:"signal_level,omitempty"`
	Flags                string   `protobuf:"bytes,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Ssid                 string   `protobuf:"bytes,5,opt,name=ssid,proto3" json:"ssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WpaNetwork) Reset()         { *m = WpaNetwork{} }
func (m *WpaNetwork) String() string { return proto.CompactTextString(m) }
func (*WpaNetwork) ProtoMessage()    {}
func (*WpaNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *WpaNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WpaNetwork.Unmarshal(m, b)
}
func (m *WpaNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WpaNetwork.Marshal(b, m, deterministic)
}
func (m *WpaNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WpaNetwork.Merge(m, src)
}
func (m *WpaNetwork) XXX_Size() int {
	return xxx_messageInfo_WpaNetwork.Size(m)
}
func (m *WpaNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_WpaNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_WpaNetwork proto.InternalMessageInfo

func (m *WpaNetwork) GetBssid() string {
	if m != nil {
		return m.Bssid
	}
	return ""
}

func (m *WpaNetwork) GetFrequency() string {
	if m != nil {
		return m.Frequency
	}
	return ""
}

func (m *WpaNetwork) GetSignalLevel() string {
	if m != nil {
		return m.SignalLevel
	}
	return ""
}

func (m *WpaNetwork) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *WpaNetwork) GetSsid() string {
	if m != nil {
		return m.Ssid
	}
	return ""
}

type GetWpaNetworksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWpaNetworksRequest) Reset()         { *m = GetWpaNetworksRequest{} }
func (m *GetWpaNetworksRequest) String() string { return proto.CompactTextString(m) }
func (*GetWpaNetworksRequest) ProtoMessage()    {}
func (*GetWpaNetworksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

func (m *GetWpaNetworksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWpaNetworksRequest.Unmarshal(m, b)
}
func (m *GetWpaNetworksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWpaNetworksRequest.Marshal(b, m, deterministic)
}
func (m *GetWpaNetworksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWpaNetworksRequest.Merge(m, src)
}
func (m *GetWpaNetworksRequest) XXX_Size() int {
	return xxx_messageInfo_GetWpaNetworksRequest.Size(m)
}
func (m *GetWpaNetworksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWpaNetworksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWpaNetworksRequest proto.InternalMessageInfo

type GetWpaNetworksResponse struct {
	Networks             []*WpaNetwork `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetWpaNetworksResponse) Reset()         { *m = GetWpaNetworksResponse{} }
func (m *GetWpaNetworksResponse) String() string { return proto.CompactTextString(m) }
func (*GetWpaNetworksResponse) ProtoMessage()    {}
func (*GetWpaNetworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}

func (m *GetWpaNetworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWpaNetworksResponse.Unmarshal(m, b)
}
func (m *GetWpaNetworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWpaNetworksResponse.Marshal(b, m, deterministic)
}
func (m *GetWpaNetworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWpaNetworksResponse.Merge(m, src)
}
func (m *GetWpaNetworksResponse) XXX_Size() int {
	return xxx_messageInfo_GetWpaNetworksResponse.Size(m)
}
func (m *GetWpaNetworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWpaNetworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWpaNetworksResponse proto.InternalMessageInfo

func (m *GetWpaNetworksResponse) GetNetworks() []*WpaNetwork {
	if m != nil {
		return m.Networks
	}
	return nil
}

type UpdateRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

type ConnectToRemoteNodeRequest struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Cert                 []byte   `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`
	Macaroon             []byte   `protobuf:"bytes,3,opt,name=macaroon,proto3" json:"macaroon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectToRemoteNodeRequest) Reset()         { *m = ConnectToRemoteNodeRequest{} }
func (m *ConnectToRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectToRemoteNodeRequest) ProtoMessage()    {}
func (*ConnectToRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}

func (m *ConnectToRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectToRemoteNodeRequest.Unmarshal(m, b)
}
func (m *ConnectToRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectToRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (m *ConnectToRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectToRemoteNodeRequest.Merge(m, src)
}
func (m *ConnectToRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectToRemoteNodeRequest.Size(m)
}
func (m *ConnectToRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectToRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectToRemoteNodeRequest proto.InternalMessageInfo

func (m *ConnectToRemoteNodeRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ConnectToRemoteNodeRequest) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *ConnectToRemoteNodeRequest) GetMacaroon() []byte {
	if m != nil {
		return m.Macaroon
	}
	return nil
}

type ConnectToRemoteNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectToRemoteNodeResponse) Reset()         { *m = ConnectToRemoteNodeResponse{} }
func (m *ConnectToRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectToRemoteNodeResponse) ProtoMessage()    {}
func (*ConnectToRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}

func (m *ConnectToRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectToRemoteNodeResponse.Unmarshal(m, b)
}
func (m *ConnectToRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectToRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (m *ConnectToRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectToRemoteNodeResponse.Merge(m, src)
}
func (m *ConnectToRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectToRemoteNodeResponse.Size(m)
}
func (m *ConnectToRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectToRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectToRemoteNodeResponse proto.InternalMessageInfo

type DisconnectFromRemoteNodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectFromRemoteNodeRequest) Reset()         { *m = DisconnectFromRemoteNodeRequest{} }
func (m *DisconnectFromRemoteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectFromRemoteNodeRequest) ProtoMessage()    {}
func (*DisconnectFromRemoteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14}
}

func (m *DisconnectFromRemoteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectFromRemoteNodeRequest.Unmarshal(m, b)
}
func (m *DisconnectFromRemoteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectFromRemoteNodeRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectFromRemoteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectFromRemoteNodeRequest.Merge(m, src)
}
func (m *DisconnectFromRemoteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectFromRemoteNodeRequest.Size(m)
}
func (m *DisconnectFromRemoteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectFromRemoteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectFromRemoteNodeRequest proto.InternalMessageInfo

type DisconnectFromRemoteNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectFromRemoteNodeResponse) Reset()         { *m = DisconnectFromRemoteNodeResponse{} }
func (m *DisconnectFromRemoteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectFromRemoteNodeResponse) ProtoMessage()    {}
func (*DisconnectFromRemoteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{15}
}

func (m *DisconnectFromRemoteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectFromRemoteNodeResponse.Unmarshal(m, b)
}
func (m *DisconnectFromRemoteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectFromRemoteNodeResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectFromRemoteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectFromRemoteNodeResponse.Merge(m, src)
}
func (m *DisconnectFromRemoteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectFromRemoteNodeResponse.Size(m)
}
func (m *DisconnectFromRemoteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectFromRemoteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectFromRemoteNodeResponse proto.InternalMessageInfo

type RebootRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootRequest) Reset()         { *m = RebootRequest{} }
func (m *RebootRequest) String() string { return proto.CompactTextString(m) }
func (*RebootRequest) ProtoMessage()    {}
func (*RebootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{16}
}

func (m *RebootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootRequest.Unmarshal(m, b)
}
func (m *RebootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootRequest.Marshal(b, m, deterministic)
}
func (m *RebootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootRequest.Merge(m, src)
}
func (m *RebootRequest) XXX_Size() int {
	return xxx_messageInfo_RebootRequest.Size(m)
}
func (m *RebootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootRequest proto.InternalMessageInfo

type RebootResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootResponse) Reset()         { *m = RebootResponse{} }
func (m *RebootResponse) String() string { return proto.CompactTextString(m) }
func (*RebootResponse) ProtoMessage()    {}
func (*RebootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{17}
}

func (m *RebootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootResponse.Unmarshal(m, b)
}
func (m *RebootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootResponse.Marshal(b, m, deterministic)
}
func (m *RebootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootResponse.Merge(m, src)
}
func (m *RebootResponse) XXX_Size() int {
	return xxx_messageInfo_RebootResponse.Size(m)
}
func (m *RebootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RebootResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("sweetrpc.ConnectWpaNetworkResponse_WpaConnectionUpdateState", ConnectWpaNetworkResponse_WpaConnectionUpdateState_name, ConnectWpaNetworkResponse_WpaConnectionUpdateState_value)
	proto.RegisterType((*GetInfoRequest)(nil), "sweetrpc.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "sweetrpc.GetInfoResponse")
	proto.RegisterType((*RemoteNode)(nil), "sweetrpc.RemoteNode")
	proto.RegisterType((*GetWpaConnectionInfoRequest)(nil), "sweetrpc.GetWpaConnectionInfoRequest")
	proto.RegisterType((*GetWpaConnectionInfoResponse)(nil), "sweetrpc.GetWpaConnectionInfoResponse")
	proto.RegisterType((*ConnectWpaNetworkRequest)(nil), "sweetrpc.ConnectWpaNetworkRequest")
	proto.RegisterType((*ConnectWpaNetworkResponse)(nil), "sweetrpc.ConnectWpaNetworkResponse")
	proto.RegisterType((*WpaNetwork)(nil), "sweetrpc.WpaNetwork")
	proto.RegisterType((*GetWpaNetworksRequest)(nil), "sweetrpc.GetWpaNetworksRequest")
	proto.RegisterType((*GetWpaNetworksResponse)(nil), "sweetrpc.GetWpaNetworksResponse")
	proto.RegisterType((*UpdateRequest)(nil), "sweetrpc.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "sweetrpc.UpdateResponse")
	proto.RegisterType((*ConnectToRemoteNodeRequest)(nil), "sweetrpc.ConnectToRemoteNodeRequest")
	proto.RegisterType((*ConnectToRemoteNodeResponse)(nil), "sweetrpc.ConnectToRemoteNodeResponse")
	proto.RegisterType((*DisconnectFromRemoteNodeRequest)(nil), "sweetrpc.DisconnectFromRemoteNodeRequest")
	proto.RegisterType((*DisconnectFromRemoteNodeResponse)(nil), "sweetrpc.DisconnectFromRemoteNodeResponse")
	proto.RegisterType((*RebootRequest)(nil), "sweetrpc.RebootRequest")
	proto.RegisterType((*RebootResponse)(nil), "sweetrpc.RebootResponse")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x4e, 0xd4, 0x40,
	0x14, 0xde, 0xee, 0xb2, 0x0b, 0x7b, 0x80, 0xa5, 0x8e, 0x08, 0xa5, 0xa2, 0x2c, 0xa3, 0x18, 0xf4,
	0x62, 0x63, 0xd0, 0x4b, 0x4d, 0x30, 0xb0, 0x10, 0x0c, 0x59, 0x93, 0x02, 0xe1, 0x0e, 0x53, 0xba,
	0xc3, 0xa6, 0xa1, 0xed, 0xd4, 0x99, 0x01, 0xe2, 0x43, 0x78, 0xe1, 0xdb, 0x78, 0xed, 0x93, 0x99,
	0xe9, 0x4c, 0xff, 0xd8, 0x56, 0xb8, 0xeb, 0x39, 0xe7, 0x3b, 0x7f, 0xdf, 0x7e, 0x67, 0x16, 0xba,
	0x2c, 0xf6, 0x06, 0x31, 0xa3, 0x82, 0xa2, 0x39, 0x7e, 0x47, 0x88, 0x60, 0xb1, 0x87, 0x4d, 0xe8,
	0x1d, 0x12, 0x71, 0x14, 0x5d, 0x51, 0x87, 0xfc, 0xb8, 0x21, 0x5c, 0xe0, 0xdf, 0x06, 0x2c, 0x65,
	0x2e, 0x1e, 0xd3, 0x88, 0x13, 0xb4, 0x02, 0x1d, 0x4e, 0x98, 0xef, 0x06, 0x96, 0xd1, 0x37, 0xb6,
	0xbb, 0x8e, 0xb6, 0x90, 0x05, 0xb3, 0xb7, 0x84, 0x71, 0x9f, 0x46, 0x56, 0x33, 0x09, 0xa4, 0xa6,
	0xcc, 0xf0, 0x68, 0x18, 0xfa, 0xc2, 0x6a, 0xa9, 0x0c, 0x65, 0xa1, 0x8f, 0x00, 0x8c, 0x84, 0x54,
	0x90, 0x11, 0x1d, 0x13, 0x6b, 0xa6, 0x6f, 0x6c, 0xcf, 0xef, 0x2c, 0x0f, 0xd2, 0x71, 0x06, 0x4e,
	0x16, 0x73, 0x0a, 0x38, 0xfc, 0x12, 0x20, 0x8f, 0x20, 0x13, 0x5a, 0x37, 0xcc, 0xd7, 0xa3, 0xc8,
	0x4f, 0xfc, 0x02, 0x9e, 0x1f, 0x12, 0x71, 0x1e, 0xbb, 0x7b, 0x34, 0x8a, 0x88, 0x27, 0x7c, 0x1a,
	0x15, 0x57, 0x62, 0xb0, 0x5e, 0x1d, 0xd6, 0xeb, 0x21, 0x98, 0xe1, 0xdc, 0x1f, 0xeb, 0x8a, 0xc9,
	0x37, 0x5a, 0x86, 0x36, 0x17, 0xae, 0x20, 0x7a, 0x31, 0x65, 0xa0, 0x1e, 0x34, 0xfd, 0x58, 0xaf,
	0xd4, 0xf4, 0x63, 0x49, 0x40, 0x48, 0x38, 0x77, 0x27, 0x6a, 0x97, 0xae, 0x93, 0x9a, 0x78, 0x17,
	0x2c, 0xdd, 0xed, 0x3c, 0x76, 0x47, 0x44, 0xdc, 0x51, 0x76, 0xad, 0xe7, 0xa9, 0xec, 0x67, 0x42,
	0x2b, 0xe6, 0xd7, 0xba, 0x9b, 0xfc, 0xc4, 0x7f, 0x0c, 0x58, 0xab, 0x28, 0xa1, 0x67, 0x3e, 0x85,
	0x8e, 0x1c, 0xe9, 0x86, 0x27, 0x55, 0x7a, 0x3b, 0x9f, 0x72, 0x12, 0x6b, 0x93, 0x06, 0x25, 0x0a,
	0xce, 0xe2, 0xb1, 0x2b, 0xc8, 0x89, 0xdc, 0xcb, 0xd1, 0xb5, 0xf0, 0x10, 0xac, 0x3a, 0x0c, 0xea,
	0x01, 0xec, 0x7d, 0x1b, 0x8d, 0x86, 0x7b, 0xa7, 0x47, 0xa3, 0x43, 0xb3, 0x81, 0x16, 0xa1, 0xab,
	0xed, 0xe1, 0xbe, 0x69, 0x20, 0x80, 0xce, 0xc1, 0x97, 0xa3, 0xe3, 0xe1, 0xbe, 0xd9, 0xc4, 0xbf,
	0x0c, 0x80, 0xbc, 0xbd, 0xe4, 0xf2, 0xb2, 0xb0, 0xb0, 0x32, 0xd0, 0x3a, 0x74, 0xaf, 0x98, 0x64,
	0x24, 0xf2, 0x7e, 0xea, 0xbd, 0x73, 0x07, 0xda, 0x84, 0x05, 0xee, 0x4f, 0x22, 0x37, 0xf8, 0x1e,
	0x90, 0x5b, 0x12, 0x68, 0xce, 0xe7, 0x95, 0xef, 0x58, 0xba, 0x64, 0xd9, 0xab, 0xc0, 0x9d, 0x70,
	0x4d, 0xbd, 0x32, 0x32, 0x72, 0xdb, 0x39, 0xb9, 0x78, 0x15, 0x9e, 0x29, 0x01, 0xe8, 0x89, 0x78,
	0xaa, 0x8c, 0xaf, 0xb0, 0x72, 0x3f, 0xa0, 0xf9, 0x7d, 0x0f, 0x73, 0x91, 0xf6, 0x59, 0x46, 0xbf,
	0x55, 0x96, 0x69, 0x81, 0xda, 0x0c, 0x85, 0x37, 0x61, 0x51, 0xd1, 0x95, 0xfe, 0xcc, 0x89, 0x4e,
	0x83, 0x5c, 0xa7, 0x81, 0xbc, 0xb6, 0x14, 0xa2, 0xda, 0xe0, 0x0b, 0xb0, 0x35, 0xdb, 0xa7, 0xb4,
	0x20, 0xfe, 0x62, 0x85, 0xa2, 0xd2, 0xe5, 0x76, 0x1e, 0x61, 0x22, 0xe1, 0x6b, 0xc1, 0x49, 0xbe,
	0x91, 0x0d, 0x73, 0xa1, 0xeb, 0xb9, 0x8c, 0xd2, 0x28, 0xa1, 0x69, 0xc1, 0xc9, 0x6c, 0x79, 0x19,
	0x95, 0xf5, 0x75, 0xfb, 0x4d, 0xd8, 0xd8, 0xf7, 0xb9, 0xa7, 0x10, 0x07, 0x8c, 0x86, 0x53, 0x33,
	0x60, 0x0c, 0xfd, 0x7a, 0x88, 0x2e, 0xb3, 0x04, 0x8b, 0x0e, 0xb9, 0xa4, 0x54, 0xa4, 0x49, 0x26,
	0xf4, 0x52, 0x87, 0x82, 0xec, 0xfc, 0x6d, 0x43, 0xfb, 0x44, 0xf2, 0x87, 0x76, 0x61, 0x56, 0xbf,
	0x2f, 0xc8, 0xca, 0x29, 0x2d, 0xbf, 0x42, 0xf6, 0x5a, 0x45, 0x44, 0x37, 0x6b, 0xa0, 0x09, 0x2c,
	0x57, 0xdd, 0x33, 0xda, 0x2a, 0x25, 0xd5, 0x3d, 0x07, 0xf6, 0x9b, 0x87, 0x60, 0x59, 0xa3, 0x0b,
	0x78, 0x32, 0x75, 0x4c, 0x08, 0xff, 0xf7, 0xd2, 0x54, 0x8b, 0x57, 0x8f, 0xb8, 0x46, 0xdc, 0x40,
	0x67, 0xc9, 0xeb, 0x5b, 0x90, 0x1f, 0xda, 0xb8, 0x3f, 0xdb, 0x3d, 0xc5, 0xda, 0xfd, 0x7a, 0x40,
	0x56, 0xf6, 0x33, 0x74, 0x94, 0xcc, 0xd0, 0x6a, 0x8e, 0x2e, 0x69, 0xd3, 0xb6, 0xa6, 0x03, 0x59,
	0xfa, 0x18, 0x9e, 0x56, 0x68, 0x06, 0xbd, 0x9e, 0xda, 0xa9, 0x42, 0xb2, 0xf6, 0xd6, 0x03, 0xa8,
	0xac, 0x0b, 0x07, 0xab, 0x4e, 0x57, 0xe8, 0x6d, 0x5e, 0xe4, 0x01, 0x79, 0xda, 0xef, 0x1e, 0x03,
	0x2d, 0x32, 0xa3, 0x74, 0x59, 0x64, 0xa6, 0x24, 0xdd, 0x22, 0x33, 0x65, 0x09, 0xe3, 0xc6, 0x65,
	0x27, 0xf9, 0xfb, 0xfc, 0xf0, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x69, 0xba, 0xd1, 0x5a, 0x4b, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SweetClient is the client API for Sweet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SweetClient interface {
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
	GetWpaConnectionInfo(ctx context.Context, in *GetWpaConnectionInfoRequest, opts ...grpc.CallOption) (*GetWpaConnectionInfoResponse, error)
	ConnectWpaNetwork(ctx context.Context, in *ConnectWpaNetworkRequest, opts ...grpc.CallOption) (*ConnectWpaNetworkResponse, error)
	GetWpaNetworks(ctx context.Context, in *GetWpaNetworksRequest, opts ...grpc.CallOption) (*GetWpaNetworksResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	ConnectToRemoteNode(ctx context.Context, in *ConnectToRemoteNodeRequest, opts ...grpc.CallOption) (*ConnectToRemoteNodeResponse, error)
	DisconnectFromRemoteNode(ctx context.Context, in *DisconnectFromRemoteNodeRequest, opts ...grpc.CallOption) (*DisconnectFromRemoteNodeResponse, error)
	Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error)
}

type sweetClient struct {
	cc *grpc.ClientConn
}

func NewSweetClient(cc *grpc.ClientConn) SweetClient {
	return &sweetClient{cc}
}

func (c *sweetClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) GetWpaConnectionInfo(ctx context.Context, in *GetWpaConnectionInfoRequest, opts ...grpc.CallOption) (*GetWpaConnectionInfoResponse, error) {
	out := new(GetWpaConnectionInfoResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/GetWpaConnectionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) ConnectWpaNetwork(ctx context.Context, in *ConnectWpaNetworkRequest, opts ...grpc.CallOption) (*ConnectWpaNetworkResponse, error) {
	out := new(ConnectWpaNetworkResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/ConnectWpaNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) GetWpaNetworks(ctx context.Context, in *GetWpaNetworksRequest, opts ...grpc.CallOption) (*GetWpaNetworksResponse, error) {
	out := new(GetWpaNetworksResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/GetWpaNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) ConnectToRemoteNode(ctx context.Context, in *ConnectToRemoteNodeRequest, opts ...grpc.CallOption) (*ConnectToRemoteNodeResponse, error) {
	out := new(ConnectToRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/ConnectToRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) DisconnectFromRemoteNode(ctx context.Context, in *DisconnectFromRemoteNodeRequest, opts ...grpc.CallOption) (*DisconnectFromRemoteNodeResponse, error) {
	out := new(DisconnectFromRemoteNodeResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/DisconnectFromRemoteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sweetClient) Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error) {
	out := new(RebootResponse)
	err := c.cc.Invoke(ctx, "/sweetrpc.Sweet/Reboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SweetServer is the server API for Sweet service.
type SweetServer interface {
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
	GetWpaConnectionInfo(context.Context, *GetWpaConnectionInfoRequest) (*GetWpaConnectionInfoResponse, error)
	ConnectWpaNetwork(context.Context, *ConnectWpaNetworkRequest) (*ConnectWpaNetworkResponse, error)
	GetWpaNetworks(context.Context, *GetWpaNetworksRequest) (*GetWpaNetworksResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	ConnectToRemoteNode(context.Context, *ConnectToRemoteNodeRequest) (*ConnectToRemoteNodeResponse, error)
	DisconnectFromRemoteNode(context.Context, *DisconnectFromRemoteNodeRequest) (*DisconnectFromRemoteNodeResponse, error)
	Reboot(context.Context, *RebootRequest) (*RebootResponse, error)
}

func RegisterSweetServer(s *grpc.Server, srv SweetServer) {
	s.RegisterService(&_Sweet_serviceDesc, srv)
}

func _Sweet_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_GetWpaConnectionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWpaConnectionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).GetWpaConnectionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/GetWpaConnectionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).GetWpaConnectionInfo(ctx, req.(*GetWpaConnectionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_ConnectWpaNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectWpaNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).ConnectWpaNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/ConnectWpaNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).ConnectWpaNetwork(ctx, req.(*ConnectWpaNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_GetWpaNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWpaNetworksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).GetWpaNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/GetWpaNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).GetWpaNetworks(ctx, req.(*GetWpaNetworksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_ConnectToRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectToRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).ConnectToRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/ConnectToRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).ConnectToRemoteNode(ctx, req.(*ConnectToRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_DisconnectFromRemoteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectFromRemoteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).DisconnectFromRemoteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/DisconnectFromRemoteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).DisconnectFromRemoteNode(ctx, req.(*DisconnectFromRemoteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sweet_Reboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SweetServer).Reboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sweetrpc.Sweet/Reboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SweetServer).Reboot(ctx, req.(*RebootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sweet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sweetrpc.Sweet",
	HandlerType: (*SweetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Sweet_GetInfo_Handler,
		},
		{
			MethodName: "GetWpaConnectionInfo",
			Handler:    _Sweet_GetWpaConnectionInfo_Handler,
		},
		{
			MethodName: "ConnectWpaNetwork",
			Handler:    _Sweet_ConnectWpaNetwork_Handler,
		},
		{
			MethodName: "GetWpaNetworks",
			Handler:    _Sweet_GetWpaNetworks_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Sweet_Update_Handler,
		},
		{
			MethodName: "ConnectToRemoteNode",
			Handler:    _Sweet_ConnectToRemoteNode_Handler,
		},
		{
			MethodName: "DisconnectFromRemoteNode",
			Handler:    _Sweet_DisconnectFromRemoteNode_Handler,
		},
		{
			MethodName: "Reboot",
			Handler:    _Sweet_Reboot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
